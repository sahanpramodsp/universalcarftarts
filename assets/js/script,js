// Portfolio Items Data
const portfolioItems = [
    {
        category: 'keytags',
        image: 'portfolio/keytags/keytag1.jpg',
        title: 'Heart Keytag'
    },
    {
        category: 'keytags',
        image: 'portfolio/keytags/keytag8.jpg',
        title: 'Seashell Keytag'
    },
    {
        category: 'keytags',
        image: 'portfolio/keytags/keytag6.jpg',
        title: 'Letter Keytag'
    },
    {
        category: 'keytags',
        image: 'portfolio/keytags/keytag4.jpg',
        title: 'Letter Keytag'
    },
    {
        category: 'keytags',
        image: 'portfolio/keytags/keytag3.jpg',
        title: 'Apple Keytag'
    },
    {
        category: 'keytags',
        image: 'portfolio/keytags/keytag10.jpg',
        title: 'Keytag'
    },
    {
        category: 'earrings',
        image: 'portfolio/earrings/earrings1.jpg',
        title: 'Earings'
    },
    {
        category: 'earrings',
        image: 'portfolio/earrings/earrings2.jpg',
        title: 'Ocean Wave Necklace'
    },
    {
        category: 'earrings',
        image: 'portfolio/earrings/earrings3.jpg',
        title: 'Ocean Wave Necklace'
    },
    {
        category: 'earrings',
        image: 'portfolio/earrings/earrings4.jpg',
        title: 'Ocean Wave Necklace'
    },
    {
        category: 'memories',
        image: 'portfolio/memories/memo2.jpg',
        title: 'Baby Memory'
    },

    {
        category: 'memories',
        image: 'portfolio/memories/memo4.jpg',
        title: 'Memory Box'
    },
    {
        category: 'christmas',
        image: 'portfolio/christams/christams1.jpg',
        title: 'Christmas Ornament'
    },
    {
        category: 'christmas',
        image: 'portfolio/christams/christams3.jpg',
        title: 'Holiday Decoration'
    },
    {
        category: 'birthday',
        image: 'portfolio/birthday/memo3.jpg',
        title: 'Birthday Gift Set'
    }
];

// Initialize portfolio grid
function initializePortfolio() {
    const portfolioGrid = document.querySelector('.portfolio-grid');
    
    portfolioItems.forEach(item => {
        const portfolioItem = createPortfolioItem(item);
        portfolioGrid.appendChild(portfolioItem);
    });
}

// Create portfolio item element
function createPortfolioItem(item) {
    const div = document.createElement('div');
    div.className = 'col-lg-4 col-md-6 portfolio-item fade-in ' + item.category;
    
    div.innerHTML = `
        <div class="card">
            <img src="${item.image}" alt="${item.title}" class="card-img-top">
            <div class="portfolio-overlay">
                <h5 class="text-white">${item.title}</h5>
            </div>
        </div>
    `;
    
    return div;
}

// Portfolio filtering
function initializeFiltering() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    
    filterButtons.forEach(button => {
        button.addEventListener('click', () => {
            // Remove active class from all buttons
            filterButtons.forEach(btn => btn.classList.remove('active'));
            // Add active class to clicked button
            button.classList.add('active');
            
            const category = button.getAttribute('data-category');
            filterPortfolioItems(category);
        });
    });
}

// Filter portfolio items
function filterPortfolioItems(category) {
    const items = document.querySelectorAll('.portfolio-item');
    
    items.forEach(item => {
        if (category === 'all' || item.classList.contains(category)) {
            item.style.display = 'block';
            setTimeout(() => {
                item.classList.add('visible');
            }, 100);
        } else {
            item.classList.remove('visible');
            item.style.display = 'none';
        }
    });
}

// Scroll to top button functionality
function initializeScrollToTop() {
    const scrollBtn = document.getElementById('scrollBtn');
    
    window.addEventListener('scroll', () => {
        if (window.pageYOffset > 300) {
            scrollBtn.style.display = 'block';
        } else {
            scrollBtn.style.display = 'none';
        }
    });
    
    scrollBtn.addEventListener('click', () => {
        window.scrollTo({
            top: 0,
            behavior: 'smooth'
        });
    });
}

// Smooth scrolling for navigation links
function initializeSmoothScroll() {
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
                
                // Close mobile menu if open
                const navbarToggler = document.querySelector('.navbar-toggler');
                const navbarCollapse = document.querySelector('.navbar-collapse');
                if (navbarCollapse.classList.contains('show')) {
                    navbarToggler.click();
                }
            }
        });
    });
}

// Navbar scroll effect
function initializeNavbarEffect() {
    const navbar = document.querySelector('.navbar');
    
    window.addEventListener('scroll', () => {
        if (window.pageYOffset > 50) {
            navbar.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';
            navbar.style.boxShadow = '0 2px 10px rgba(0, 0, 0, 0.1)';
        } else {
            navbar.style.backgroundColor = 'rgba(255, 255, 255, 0.95)';
            navbar.style.boxShadow = 'none';
        }
    });
}

// Intersection Observer for fade-in animations
function initializeScrollAnimations() {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible');
            }
        });
    }, {
        threshold: 0.1
    });
    
    document.querySelectorAll('.fade-in').forEach(element => {
        observer.observe(element);
    });
}

// Form submission handling
function initializeContactForm() {
    const contactForm = document.querySelector('.contact-form');
    
    if (contactForm) {
        contactForm.addEventListener('submit', (e) => {
            e.preventDefault();
            
            // Get form data
            const formData = new FormData(contactForm);
            const data = Object.fromEntries(formData);
            
            // Here you would typically send the data to your server
            console.log('Form submitted:', data);
            
            // Show success message (replace with your own implementation)
            alert('Thank you for your message! We will get back to you soon.');
            contactForm.reset();
        });
    }
}

// Initialize everything when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    initializePortfolio();
    initializeFiltering();
    initializeScrollToTop();
    initializeSmoothScroll();
    initializeNavbarEffect();
    initializeScrollAnimations();
    initializeContactForm();
});